#pragma checksum "C:\MVC3\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "16df2b158952bc38029c7f0bf8d21a4776b9f3b4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\MVC3\Views\_ViewImports.cshtml"
using MVC3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\MVC3\Views\_ViewImports.cshtml"
using MVC3.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"16df2b158952bc38029c7f0bf8d21a4776b9f3b4", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"55b18fa9a9fcd5532d135449b8f8583563567b97", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/ClientSide/PatientModel.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\MVC3\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "16df2b158952bc38029c7f0bf8d21a4776b9f3b43787", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "16df2b158952bc38029c7f0bf8d21a4776b9f3b44826", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    //controller code
    var patient = new Patient();
    function UpdatePatient() {
        this.patient.name = $(""#txtname"").val();
        this.patient.address = $(""#txtaddress"").val();
    }
    function AddProblems() {
        var problemobj = new Problem();
        problemobj.name = $(""#txtproblem"").val();
        this.patient.Problems.push(problemobj);
        $(""#txtproblem"").val("""");

    }
                function Submit() {
                    var check = this.patient;
                    $.ajax({
                        url: ""/api/PatientAPI/"",
                        type: ""POST"",
                        data: JSON.stringify(check),
                        contentType: ""application/json ; charset=utf-8"",
                        dataType: ""json"",
                        success: function (response) {
                            selector = ""#showTable"";
                            constructTable(selector);
                            function constructTable(sele");
            WriteLiteral(@"ctor) {

                                // Getting the all column names 
                                var cols = Headers(response, selector);

                                // Traversing the JSON data 
                                for (var i = 0; i < response.length; i++) {
                                    var row = $('<tr/>');
                                    for (var colIndex = 0; colIndex < cols.length; colIndex++) {
                                        var val = response[i][cols[colIndex]];

                                        // If there is any key, which is matching 
                                        // with the column name 
                                        if (val == null) val = """";
                                        row.append($('<td/>').html(val));
                                    }

                                    // Adding each row to the table 
                                    $(selector).append(row);
                            ");
            WriteLiteral(@"    }
                            }

                            function Headers(response, selector) {
                                var columns = [];
                                var header = $('<tr/>');

                                for (var i = 0; i < response.length; i++) {
                                    var row = response[i];

                                    for (var k in row) {
                                        if ($.inArray(k, columns) == -1) {
                                            columns.push(k);

                                            // Creating the header 
                                            header.append($('<th/>').html(k));
                                        }
                                    }
                                }

                                // Appending the header to the table 
                                $(selector).append(header);
                                return columns;
                   ");
            WriteLiteral(@"         }
                        }
                    }
        )
                }
               
</script>
<div class=""text-center"">
    <h1 class=""display-4"">Welcome</h1>
    <p>Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>
</div>
<br />
Add Patient
<br />
    Enter Name:
<input type=""text"" onchange=""UpdatePatient()"" id=""txtname"" name=""name"" />
    Enter Phone:
<input type=""text"" name=""Phone"" />
    Enter Address:
<input type=""text"" onchange=""UpdatePatient()"" id=""txtaddress"" name=""address"" />
<br />
Add Problem
<br />
    Enter Name:
<input type=""text"" id=""txtproblem"" name=""name"" />
<input type=""button"" onclick=""AddProblems()"" value=""Add Problem""  />
<br />
Add Treatment
<br />
    Enter Name:
<input type=""text"" name=""Name"" />
    Enter Dosage:
<input type=""text"" name=""Dosage"" />
<input type=""submit"" value=""Add Treatment"" />
<br />
<input type=""submit"" value=""Add Next Problem"" />
<br />
<input type=""submit""");
            WriteLiteral(@" value=""Add Next Patient"" />
<br />
<input type=""button"" onclick=""Submit()"" value=""SUBMIT""/>
<br />
<input type=""submit"" value=""Add To Database"" />
<br />
<label for=""example"">Patient Name: </label>
<input id=""example"" type=""text"" name=""text"">
<input type=""submit"" value=""Search DB"" />
<br />
<table id=""showTable"" class=""table table-bordered table-striped"">

</table>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
